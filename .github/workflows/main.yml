name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "**"

env:
  DOCKER_BUILDKIT: 1
  URL_DOCKER_REGISTRY: ghcr.io
  DOCKER_IMAGE_AGENCY: ghcr.io/absaoss/vcxagencynode/vcxagency-node:2.2.0
  DOCKER_IMAGE_POOL: pstas/indypool-localhost:1.15.0-localhost

  DOCKER_REPO_LOCAL_ALPINE_CORE: alpine-core
  DOCKER_REPO_LOCAL_LIBVCX: libvcx
  DOCKER_REPO_LOCAL_LIBVCX_TESTER: libvcx-tester
  DOCKER_REPO_LOCAL_CODECOV: codecov
  DOCKER_REPO_LOCAL_ANDROID: android-test

jobs:
  workflow-setup:
    runs-on: ubuntu-20.04
    outputs:
      PUBLISH_VERSION: ${{ steps.run-info.outputs.publish-version }}
      RELEASE: ${{ steps.run-info.outputs.release }}
      PRERELEASE: ${{ steps.run-info.outputs.pre-release }}
      BRANCH_NAME: ${{ steps.run-info.outputs.branch-name }}

      DOCKER_IMG_CACHED_ALPINE_CORE: ${{ steps.docker-imgs.outputs.DOCKER_IMG_CACHED_ALPINE_CORE }}
      DOCKER_IMG_CACHED_LIBVCX: ${{ steps.docker-imgs.outputs.DOCKER_IMG_CACHED_LIBVCX }}
      DOCKER_IMG_CACHED_LIBVCX_TESTER: ${{ steps.docker-imgs.outputs.DOCKER_IMG_CACHED_LIBVCX_TESTER }}
      DOCKER_IMG_CACHED_CODECOV: ${{ steps.docker-imgs.outputs.DOCKER_IMG_CACHED_CODECOV }}
      DOCKER_IMG_CACHED_ANDROID: ${{ steps.docker-imgs.outputs.DOCKER_IMG_CACHED_ANDROID }}
    steps:
      - name: "Git checkout"
        uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.64.0
      - name: "Construct CI run-info"
        id: run-info
        uses: ./.github/actions/construct-run-info
      - name: "Set outputs"
        id: docker-imgs
        run: |
          set -x
          HASH_DOCKERFILE_ALPINE_CORE=${{ hashFiles('ci/alpine_core.dockerfile')}}
          HASH_DOCKERFILE_LIBVCX=${{ hashFiles('ci/libvcx.dockerfile') }}
          HASH_DOCKERFILE_LIBVCX_TESTER=${{ hashFiles('ci/libvcx-tester.dockerfile') }}
          HASH_DOCKERFILE_CODECOV=${{ hashFiles('ci/libvcx-codecov.dockerfile') }}
          HASH_SRC_LIBVCX=${{ hashFiles('libvcx') }}
          HASH_SRC_ARIESVCX=${{ hashFiles('aries_vcx') }}
          HASH_SRC_AGENCYCLIENT=${{ hashFiles('agency_client') }}
          HASH_SRC_MESSAGES=${{ hashFiles('messages') }}
          HASH_SRC_WRAPPER_JAVA=${{ hashFiles('wrappers/java') }}
          HASH_SRC_WRAPPER_NODEJS=${{ hashFiles('wrappers/node') }}
          HASH_SRC_AGENT_NODEJS=${{ hashFiles('agents/node') }}

          HASH_DOCKER_LIBVCX=${HASH_DOCKERFILE_LIBVCX:0:11}-${HASH_SRC_LIBVCX:0:11}-${HASH_SRC_ARIESVCX:0:11}-${HASH_SRC_AGENCYCLIENT:0:11}-${HASH_SRC_MESSAGES:0:11}
          HASH_DOCKER_LIBVCX_TESTER=${HASH_DOCKER_LIBVCX}-${HASH_DOCKERFILE_LIBVCX_TESTER:0:11}-${HASH_SRC_WRAPPER_NODEJS:0:11}-${HASH_SRC_AGENT_NODEJS:0:11}
          HASH_DOCKER_CODECOV=${HASH_DOCKER_LIBVCX}-${HASH_SRC_ARIESVCX:0:11}-${HASH_SRC_AGENCYCLIENT:0:11}-${HASH_SRC_MESSAGES:0:11}-${HASH_DOCKERFILE_CODECOV:0:23}
          HASH_DOCKER_ANDROID=${HASH_DOCKER_LIBVCX}-${HASH_SRC_ARIESVCX:0:11}-${HASH_SRC_WRAPPER_JAVA:0:15}

          echo "::set-output name=DOCKER_IMG_CACHED_ALPINE_CORE::$DOCKER_REPO_LOCAL_ALPINE_CORE:$HASH_DOCKERFILE_ALPINE_CORE"
          echo "::set-output name=DOCKER_IMG_CACHED_LIBVCX::$DOCKER_REPO_LOCAL_LIBVCX:$HASH_DOCKER_LIBVCX"
          echo "::set-output name=DOCKER_IMG_CACHED_LIBVCX_TESTER::$DOCKER_REPO_LOCAL_LIBVCX_TESTER:$HASH_DOCKER_LIBVCX_TESTER"
          echo "::set-output name=DOCKER_IMG_CACHED_CODECOV::$DOCKER_REPO_LOCAL_CODECOV:$HASH_DOCKER_CODECOV"
          echo "::set-output name=DOCKER_IMG_CACHED_ANDROID::$DOCKER_REPO_LOCAL_ANDROID:$HASH_DOCKER_ANDROID"

  ##########################################################################################
  ##############################   DOCKER BUILD   ##########################################

  build-docker-android:
    needs: workflow-setup
    runs-on: ubuntu-20.04
    env:
      DOCKER_IMG_CACHED: ${{needs.workflow-setup.outputs.DOCKER_IMG_CACHED_ANDROID}}
      BRANCH_NAME: ${{ needs.workflow-setup.outputs.BRANCH_NAME }}
    steps:
      - name: "Git checkout"
        uses: actions/checkout@v3
      - name: "Docker Login"
        uses: azure/docker-login@v1
        with:
          login-server: env.URL_DOCKER_REGISTRY
          username: env.GITHUB_ACTOR
          password: secrets.GITHUB_TOKEN
      - name: "Build and cache image"
        uses: ./.github/actions/build-image
        with:
          docker-img: ${{ env.DOCKER_IMG_CACHED }}
          dockerfile-path: "wrappers/java/ci/android.dockerfile"
          branch-name: ${{ env.BRANCH_NAME }}
          docker-repo-local-name: ${{ env.DOCKER_REPO_LOCAL_ANDROID }}


  #  ##########################################################################################
  #  ##############################   DOCKER PUBLISH   ########################################

  publish-docker-android:
    runs-on: ubuntu-20.04
    needs: [ workflow-setup, build-docker-android ]
    env:
      DOCKER_IMG_CACHED: ${{ needs.workflow-setup.outputs.DOCKER_IMG_CACHED_ANDROID }}
      BRANCH_NAME: ${{ needs.workflow-setup.outputs.BRANCH_NAME }}
    steps:
      - name: "Git checkout"
        uses: actions/checkout@v3
      - name: "Docker Login"
        uses: azure/docker-login@v1
        with:
          login-server: env.URL_DOCKER_REGISTRY
          username: env.GITHUB_ACTOR
          password: secrets.GITHUB_TOKEN
      - name: "Publish branch image"
        uses: ./.github/actions/publish-image
        with:
          docker-img: ${{ env.DOCKER_IMG_CACHED }}
          publish-version: ${{ env.BRANCH_NAME }}

  #  ##########################################################################################
  #  ###############################    TESTING    ###########################################

  test-android-build:
    runs-on: ubuntu-20.04
    needs: [ workflow-setup, build-docker-android ]
    env:
      DOCKER_IMG_CACHED_ANDROID: ${{needs.workflow-setup.outputs.DOCKER_IMG_CACHED_ANDROID}}
    steps:
      - name: "Git checkout"
        uses: actions/checkout@v3
      - name: "Docker Login"
        uses: azure/docker-login@v1
        with:
          login-server: env.URL_DOCKER_REGISTRY
          username: env.GITHUB_ACTOR
          password: secrets.GITHUB_TOKEN
      - name: "Load android image"
        uses: ./.github/actions/load-image
        with:
          docker-img: ${{ env.DOCKER_IMG_CACHED_ANDROID }}
      - name: "Run android tests"
        run: |
          rm -rf /tmp/imgcache
          docker run --rm -i  $DOCKER_IMG_CACHED_ANDROID \
                              sh -c '(cd $HOME/aries-vcx && ./wrappers/java/ci/android.test.sh armv7)'
